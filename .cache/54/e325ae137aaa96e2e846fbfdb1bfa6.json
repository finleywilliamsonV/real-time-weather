{"id":"node_modules/node-geocoder/lib/geocoder.js","dependencies":[{"name":"/Users/admin/Desktop/porfolio-sites/weather/package.json","includedInParent":true,"mtime":1539921251752},{"name":"/Users/admin/Desktop/porfolio-sites/weather/.babelrc","includedInParent":true,"mtime":1539895192787},{"name":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/package.json","includedInParent":true,"mtime":1539921250401},{"name":"bluebird","loc":{"line":3,"column":23},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder.js","resolved":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/bluebird/js/browser/bluebird.js"}],"generated":{"js":"'use strict';\n\nvar BPromise = require('bluebird');\n\n/**\n* Constructor\n* @param <object> geocoder  Geocoder Adapter\n* @param <object> formatter Formatter adapter or null\n*/\nvar Geocoder = function (geocoder, formatter) {\n  this._geocoder = geocoder;\n  this._formatter = formatter;\n};\n\n/**\n* Geocode a value (address or ip)\n* @param <string>   value    Value to geocoder (address or IP)\n* @param <function> callback Callback method\n*/\nGeocoder.prototype.geocode = function (value, callback) {\n  return BPromise.resolve()\n    .bind(this)\n    .then(function() {\n      return BPromise.fromCallback(function(callback) {\n        this._geocoder.geocode(value, callback);\n      }.bind(this));\n    })\n    .then(function(data) {\n      return this._filter(value, data);\n    })\n    .then(function(data) {\n      return this._format(data);\n    })\n    .asCallback(callback);\n};\n\n/**\n* Reverse geocoding\n* @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n* @param {function} callback Callback method\n*/\nGeocoder.prototype.reverse = function(query, callback) {\n  return BPromise.resolve()\n    .bind(this)\n    .then(function() {\n      return BPromise.fromCallback(function(callback) {\n        this._geocoder.reverse(query, callback);\n      }.bind(this));\n    })\n    .then(function(data) {\n      return this._format(data);\n    })\n    .asCallback(callback);\n};\n\n/**\n* Batch geocode\n* @param <array>    values    array of Values to geocode (address or IP)\n* @param <function> callback\n*\n* @return promise\n*/\nGeocoder.prototype.batchGeocode = function(values, callback) {\n  return BPromise.resolve(values)\n    .bind(this)\n    .map(function(value) {\n      return this.geocode(value)\n        .then(function(value) {\n          return {\n            error: null,\n            value: value\n          };\n        })\n        .catch(function(error) {\n          return {\n            error: error,\n            value: null\n          };\n        });\n    })\n    .asCallback(callback);\n};\n\nGeocoder.prototype._filter = function (value, data) {\n  if (!data || !data.length) {\n    return data;\n  }\n\n  if (value.minConfidence) {\n    data = data.filter(function(geocodedAddress) {\n      if (geocodedAddress.extra && geocodedAddress.extra.confidence) {\n        return geocodedAddress.extra.confidence >= value.minConfidence;\n      }\n    });\n  }\n\n  return data;\n};\n\nGeocoder.prototype._format = function (data) {\n  var _this = this;\n  return BPromise.resolve()\n    .bind(this)\n    .then(function() {\n      if (!data) {\n        return data;\n      }\n\n      var _raw = data.raw;\n\n      data = data.map(function(result) {\n        result.provider = _this._geocoder.name;\n\n        return result;\n      });\n\n      data.raw = _raw;\n      Object.defineProperty(data,'raw',{configurable:false, enumerable:false, writable:false});\n\n      return data;\n    })\n    .then(function(data) {\n      var _data = data;\n      if (this._formatter && this._formatter !== 'undefined') {\n        _data = this._formatter.format(_data);\n      }\n\n      return _data;\n    });\n};\n\nmodule.exports = Geocoder;\n","map":{"mappings":[{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}}],"sources":{"node_modules/node-geocoder/lib/geocoder.js":"'use strict';\n\nvar BPromise = require('bluebird');\n\n/**\n* Constructor\n* @param <object> geocoder  Geocoder Adapter\n* @param <object> formatter Formatter adapter or null\n*/\nvar Geocoder = function (geocoder, formatter) {\n  this._geocoder = geocoder;\n  this._formatter = formatter;\n};\n\n/**\n* Geocode a value (address or ip)\n* @param <string>   value    Value to geocoder (address or IP)\n* @param <function> callback Callback method\n*/\nGeocoder.prototype.geocode = function (value, callback) {\n  return BPromise.resolve()\n    .bind(this)\n    .then(function() {\n      return BPromise.fromCallback(function(callback) {\n        this._geocoder.geocode(value, callback);\n      }.bind(this));\n    })\n    .then(function(data) {\n      return this._filter(value, data);\n    })\n    .then(function(data) {\n      return this._format(data);\n    })\n    .asCallback(callback);\n};\n\n/**\n* Reverse geocoding\n* @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n* @param {function} callback Callback method\n*/\nGeocoder.prototype.reverse = function(query, callback) {\n  return BPromise.resolve()\n    .bind(this)\n    .then(function() {\n      return BPromise.fromCallback(function(callback) {\n        this._geocoder.reverse(query, callback);\n      }.bind(this));\n    })\n    .then(function(data) {\n      return this._format(data);\n    })\n    .asCallback(callback);\n};\n\n/**\n* Batch geocode\n* @param <array>    values    array of Values to geocode (address or IP)\n* @param <function> callback\n*\n* @return promise\n*/\nGeocoder.prototype.batchGeocode = function(values, callback) {\n  return BPromise.resolve(values)\n    .bind(this)\n    .map(function(value) {\n      return this.geocode(value)\n        .then(function(value) {\n          return {\n            error: null,\n            value: value\n          };\n        })\n        .catch(function(error) {\n          return {\n            error: error,\n            value: null\n          };\n        });\n    })\n    .asCallback(callback);\n};\n\nGeocoder.prototype._filter = function (value, data) {\n  if (!data || !data.length) {\n    return data;\n  }\n\n  if (value.minConfidence) {\n    data = data.filter(function(geocodedAddress) {\n      if (geocodedAddress.extra && geocodedAddress.extra.confidence) {\n        return geocodedAddress.extra.confidence >= value.minConfidence;\n      }\n    });\n  }\n\n  return data;\n};\n\nGeocoder.prototype._format = function (data) {\n  var _this = this;\n  return BPromise.resolve()\n    .bind(this)\n    .then(function() {\n      if (!data) {\n        return data;\n      }\n\n      var _raw = data.raw;\n\n      data = data.map(function(result) {\n        result.provider = _this._geocoder.name;\n\n        return result;\n      });\n\n      data.raw = _raw;\n      Object.defineProperty(data,'raw',{configurable:false, enumerable:false, writable:false});\n\n      return data;\n    })\n    .then(function(data) {\n      var _data = data;\n      if (this._formatter && this._formatter !== 'undefined') {\n        _data = this._formatter.format(_data);\n      }\n\n      return _data;\n    });\n};\n\nmodule.exports = Geocoder;\n"},"lineCount":133}},"hash":"b5e9c74c25317d4fc66d51088cb056ab","cacheData":{"env":{}}}