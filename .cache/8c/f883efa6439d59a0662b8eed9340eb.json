{"id":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","dependencies":[{"name":"/Users/admin/Desktop/porfolio-sites/weather/package.json","includedInParent":true,"mtime":1539921251752},{"name":"/Users/admin/Desktop/porfolio-sites/weather/.babelrc","includedInParent":true,"mtime":1539895192787},{"name":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/package.json","includedInParent":true,"mtime":1539921250401},{"name":"net","loc":{"line":3,"column":18},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","resolved":"/Users/admin/.config/yarn/global/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"../error/valueerror.js","loc":{"line":4,"column":25},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","resolved":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/error/valueerror.js"}],"generated":{"js":"'use strict';\n\nvar net = require('net');\nvar ValueError = require('../error/valueerror.js');\n\nfunction formatGeocoderName(name) {\n  return name.toLowerCase().replace(/geocoder$/, '');\n}\n\n/**\n * AbstractGeocoder Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options\n */\nvar AbstractGeocoder = function(httpAdapter, options) {\n  if (!this.constructor.name) {\n    throw new Error('The Constructor must be named');\n  }\n\n  this.name = formatGeocoderName(this.constructor.name);\n\n  if (!httpAdapter || httpAdapter == 'undefined') {\n    throw new Error(this.constructor.name + ' need an httpAdapter');\n  }\n  this.httpAdapter = httpAdapter;\n\n  if (!options || options == 'undefined') {\n    options = {};\n  }\n\n  if (this.options) {\n    this.options.forEach(function(option) {\n      if (!options[option] || options[option] == 'undefined') {\n        options[option] = null;\n      }\n    });\n  }\n\n  this.options = options;\n};\n\n/**\n* Reverse geocoding\n* @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n* @param <function> callback Callback method\n*/\nAbstractGeocoder.prototype.reverse = function(query, callback) {\n  if (typeof this._reverse != 'function') {\n    throw new Error(this.constructor.name + ' no support reverse geocoding');\n  }\n\n  return this._reverse(query, callback);\n};\n\n/**\n* Geocode\n* @param <string>   value    Value to geocode\n* @param <function> callback Callback method\n*/\nAbstractGeocoder.prototype.geocode = function(value, callback) {\n  var address = value\n  if (typeof value === 'object') {\n    address = value.address\n  }\n  if (typeof this._geocode != 'function') {\n    throw new ValueError(this.constructor.name + ' does not support geocoding');\n  }\n  if (net.isIPv4(address) && (!this.supportIPv4 || this.supportIPv4 == 'undefined')) {\n    throw new ValueError(this.constructor.name + ' does not support geocoding IPv4');\n  }\n\n  if (net.isIPv6(address) && (!this.supportIPv6 || this.supportIPv6 == 'undefined')) {\n    throw new ValueError(this.constructor.name + ' does not support geocoding IPv6');\n  }\n\n  if (this.supportAddress === false && (!net.isIPv4(address) && !net.isIPv6(address))) {\n    throw new ValueError(this.constructor.name + ' does not support geocoding address');\n  }\n\n  return this._geocode(value, callback);\n};\n\nmodule.exports = AbstractGeocoder;\n","map":{"mappings":[{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}}],"sources":{"node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js":"'use strict';\n\nvar net = require('net');\nvar ValueError = require('../error/valueerror.js');\n\nfunction formatGeocoderName(name) {\n  return name.toLowerCase().replace(/geocoder$/, '');\n}\n\n/**\n * AbstractGeocoder Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options\n */\nvar AbstractGeocoder = function(httpAdapter, options) {\n  if (!this.constructor.name) {\n    throw new Error('The Constructor must be named');\n  }\n\n  this.name = formatGeocoderName(this.constructor.name);\n\n  if (!httpAdapter || httpAdapter == 'undefined') {\n    throw new Error(this.constructor.name + ' need an httpAdapter');\n  }\n  this.httpAdapter = httpAdapter;\n\n  if (!options || options == 'undefined') {\n    options = {};\n  }\n\n  if (this.options) {\n    this.options.forEach(function(option) {\n      if (!options[option] || options[option] == 'undefined') {\n        options[option] = null;\n      }\n    });\n  }\n\n  this.options = options;\n};\n\n/**\n* Reverse geocoding\n* @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n* @param <function> callback Callback method\n*/\nAbstractGeocoder.prototype.reverse = function(query, callback) {\n  if (typeof this._reverse != 'function') {\n    throw new Error(this.constructor.name + ' no support reverse geocoding');\n  }\n\n  return this._reverse(query, callback);\n};\n\n/**\n* Geocode\n* @param <string>   value    Value to geocode\n* @param <function> callback Callback method\n*/\nAbstractGeocoder.prototype.geocode = function(value, callback) {\n  var address = value\n  if (typeof value === 'object') {\n    address = value.address\n  }\n  if (typeof this._geocode != 'function') {\n    throw new ValueError(this.constructor.name + ' does not support geocoding');\n  }\n  if (net.isIPv4(address) && (!this.supportIPv4 || this.supportIPv4 == 'undefined')) {\n    throw new ValueError(this.constructor.name + ' does not support geocoding IPv4');\n  }\n\n  if (net.isIPv6(address) && (!this.supportIPv6 || this.supportIPv6 == 'undefined')) {\n    throw new ValueError(this.constructor.name + ' does not support geocoding IPv6');\n  }\n\n  if (this.supportAddress === false && (!net.isIPv4(address) && !net.isIPv6(address))) {\n    throw new ValueError(this.constructor.name + ' does not support geocoding address');\n  }\n\n  return this._geocode(value, callback);\n};\n\nmodule.exports = AbstractGeocoder;\n"},"lineCount":84}},"hash":"9a50c4f1044b8f883ce28161f4382d53","cacheData":{"env":{}}}