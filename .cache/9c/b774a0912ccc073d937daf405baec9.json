{"id":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","dependencies":[{"name":"/Users/admin/Desktop/porfolio-sites/weather/package.json","includedInParent":true,"mtime":1539921251752},{"name":"/Users/admin/Desktop/porfolio-sites/weather/.babelrc","includedInParent":true,"mtime":1539895192787},{"name":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/package.json","includedInParent":true,"mtime":1539921250401},{"name":"util","loc":{"line":1,"column":19},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","resolved":"/Users/admin/.config/yarn/global/node_modules/util/util.js"},{"name":"./abstractgeocoder","loc":{"line":2,"column":31},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","resolved":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js"}],"generated":{"js":"var util = require('util');\nvar AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar TeleportGeocoder = function TeleportGeocoder(httpAdapter, options) {\n  TeleportGeocoder.super_.call(this, httpAdapter, options);\n\n  var base = 'https://api.teleport.org/api';\n  this._cities_endpoint = base + '/cities/';\n  this._locations_endpoint = base + '/locations/';\n};\n\nutil.inherits(TeleportGeocoder, AbstractGeocoder);\n\nfunction getEmbeddedPath(parent, path) {\n  var elements = path.split('/');\n  for ( var i in elements) {\n    var element = elements[i];\n    var embedded = parent._embedded;\n    if (!embedded) {\n      return undefined;\n    }\n    var child = embedded[element];\n    if (!child) {\n      return undefined;\n    }\n    parent = child;\n  }\n  return parent;\n}\n\n/**\n * Geocode\n *\n * @param <string>    value     Value to geocode (Address)\n * @param <function>  callback  Callback method\n */\nTeleportGeocoder.prototype._geocode = function(value, callback) {\n  var _this = this;\n\n  var params = {};\n  params.search = value;\n  params.embed = 'city:search-results/city:item/{city:country,city:admin1_division,city:urban_area}';\n\n  this.httpAdapter.get(this._cities_endpoint, params, function(err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n\n      if (result) {\n        var searchResults = getEmbeddedPath(result, 'city:search-results') || [];\n        for (var i in searchResults) {\n          var confidence = (25 - i) / 25.0 * 10;\n          results.push(_this._formatResult(searchResults[i], 'city:item', confidence));\n        }\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nTeleportGeocoder.prototype._formatResult = function(result, cityRelationName, confidence) {\n  var city = getEmbeddedPath(result, cityRelationName);\n  var admin1 = getEmbeddedPath(city, 'city:admin1_division') || {};\n  var country = getEmbeddedPath(city, 'city:country') || {};\n  var urban_area = getEmbeddedPath(city, 'city:urban_area') || {};\n  var urban_area_links = urban_area._links || {};\n  var extra = {\n    confidence: confidence,\n    urban_area: urban_area.name,\n    urban_area_api_url: (urban_area_links.self || {}).href,\n    urban_area_web_url: urban_area.teleport_city_url\n  };\n  if (result.distance_km) {\n    extra.distance_km = result.distance_km;\n  }\n  if (result.matching_full_name) {\n    extra.matching_full_name = result.matching_full_name;\n  }\n\n  return {\n    'latitude': city.location.latlon.latitude,\n    'longitude': city.location.latlon.longitude,\n    'city': city.name,\n    'country': country.name,\n    'countryCode': country.iso_alpha2,\n    'state': admin1.name,\n    'stateCode': admin1.geonames_admin1_code,\n    'extra': extra\n  };\n};\n\n/**\n * Reverse geocoding\n *\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback          Callback method\n */\nTeleportGeocoder.prototype._reverse = function(query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n  var suffix = lat + ',' + lng;\n\n  var _this = this;\n\n  var params = {};\n  params.embed = 'location:nearest-cities/location:nearest-city/{city:country,city:admin1_division,city:urban_area}';\n\n  this.httpAdapter.get(this._locations_endpoint + suffix, params, function(err, result) {\n    if (err) {\n      throw err;\n    } else {\n      var results = [];\n\n      if (result) {\n        var searchResults = getEmbeddedPath(result, 'location:nearest-cities') || [];\n        for ( var i in searchResults) {\n          var searchResult = searchResults[i];\n          var confidence = Math.max(0, 25 - searchResult.distance_km) / 25 * 10;\n          results.push(_this._formatResult(searchResult, 'location:nearest-city', confidence));\n        }\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nmodule.exports = TeleportGeocoder;\n","map":{"mappings":[{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}}],"sources":{"node_modules/node-geocoder/lib/geocoder/teleportgeocoder.js":"var util = require('util');\nvar AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar TeleportGeocoder = function TeleportGeocoder(httpAdapter, options) {\n  TeleportGeocoder.super_.call(this, httpAdapter, options);\n\n  var base = 'https://api.teleport.org/api';\n  this._cities_endpoint = base + '/cities/';\n  this._locations_endpoint = base + '/locations/';\n};\n\nutil.inherits(TeleportGeocoder, AbstractGeocoder);\n\nfunction getEmbeddedPath(parent, path) {\n  var elements = path.split('/');\n  for ( var i in elements) {\n    var element = elements[i];\n    var embedded = parent._embedded;\n    if (!embedded) {\n      return undefined;\n    }\n    var child = embedded[element];\n    if (!child) {\n      return undefined;\n    }\n    parent = child;\n  }\n  return parent;\n}\n\n/**\n * Geocode\n *\n * @param <string>    value     Value to geocode (Address)\n * @param <function>  callback  Callback method\n */\nTeleportGeocoder.prototype._geocode = function(value, callback) {\n  var _this = this;\n\n  var params = {};\n  params.search = value;\n  params.embed = 'city:search-results/city:item/{city:country,city:admin1_division,city:urban_area}';\n\n  this.httpAdapter.get(this._cities_endpoint, params, function(err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n\n      if (result) {\n        var searchResults = getEmbeddedPath(result, 'city:search-results') || [];\n        for (var i in searchResults) {\n          var confidence = (25 - i) / 25.0 * 10;\n          results.push(_this._formatResult(searchResults[i], 'city:item', confidence));\n        }\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nTeleportGeocoder.prototype._formatResult = function(result, cityRelationName, confidence) {\n  var city = getEmbeddedPath(result, cityRelationName);\n  var admin1 = getEmbeddedPath(city, 'city:admin1_division') || {};\n  var country = getEmbeddedPath(city, 'city:country') || {};\n  var urban_area = getEmbeddedPath(city, 'city:urban_area') || {};\n  var urban_area_links = urban_area._links || {};\n  var extra = {\n    confidence: confidence,\n    urban_area: urban_area.name,\n    urban_area_api_url: (urban_area_links.self || {}).href,\n    urban_area_web_url: urban_area.teleport_city_url\n  };\n  if (result.distance_km) {\n    extra.distance_km = result.distance_km;\n  }\n  if (result.matching_full_name) {\n    extra.matching_full_name = result.matching_full_name;\n  }\n\n  return {\n    'latitude': city.location.latlon.latitude,\n    'longitude': city.location.latlon.longitude,\n    'city': city.name,\n    'country': country.name,\n    'countryCode': country.iso_alpha2,\n    'state': admin1.name,\n    'stateCode': admin1.geonames_admin1_code,\n    'extra': extra\n  };\n};\n\n/**\n * Reverse geocoding\n *\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback          Callback method\n */\nTeleportGeocoder.prototype._reverse = function(query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n  var suffix = lat + ',' + lng;\n\n  var _this = this;\n\n  var params = {};\n  params.embed = 'location:nearest-cities/location:nearest-city/{city:country,city:admin1_division,city:urban_area}';\n\n  this.httpAdapter.get(this._locations_endpoint + suffix, params, function(err, result) {\n    if (err) {\n      throw err;\n    } else {\n      var results = [];\n\n      if (result) {\n        var searchResults = getEmbeddedPath(result, 'location:nearest-cities') || [];\n        for ( var i in searchResults) {\n          var searchResult = searchResults[i];\n          var confidence = Math.max(0, 25 - searchResult.distance_km) / 25 * 10;\n          results.push(_this._formatResult(searchResult, 'location:nearest-city', confidence));\n        }\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nmodule.exports = TeleportGeocoder;\n"},"lineCount":136}},"hash":"335fd739cfee1619ce8980f7cb441b66","cacheData":{"env":{}}}