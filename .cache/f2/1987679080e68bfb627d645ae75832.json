{"id":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","dependencies":[{"name":"/Users/admin/Desktop/porfolio-sites/weather/package.json","includedInParent":true,"mtime":1539921251752},{"name":"/Users/admin/Desktop/porfolio-sites/weather/.babelrc","includedInParent":true,"mtime":1539895192787},{"name":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/package.json","includedInParent":true,"mtime":1539921250401},{"name":"util","loc":{"line":3,"column":19},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","resolved":"/Users/admin/.config/yarn/global/node_modules/util/util.js"},{"name":"./abstractgeocoder","loc":{"line":4,"column":31},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","resolved":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js"}],"generated":{"js":"'use strict';\n\nvar util = require('util');\nvar AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (language, clientId, apiKey)\n */\nvar YandexGeocoder = function YandexGeocoder(httpAdapter, options) {\n  YandexGeocoder.super_.call(this, httpAdapter, options);\n};\n\nutil.inherits(YandexGeocoder, AbstractGeocoder);\n\nfunction _findKey(result, wantedKey) {\n  var val = null;\n  Object.keys(result).every(function(key) {\n\n  if (key === wantedKey) {\n    val = result[key];\n    return false;\n  }\n\n  if (typeof result[key] === 'object') {\n    val = _findKey(result[key], wantedKey);\n\n    return val === null ? true : false;\n  }\n\n  return true;\n  });\n\n  return val;\n}\n\nfunction _formatResult(result) {\n  var position = result.GeoObject.Point.pos.split(' ');\n  result = result.GeoObject.metaDataProperty.GeocoderMetaData.AddressDetails;\n\n  return {\n    'latitude' : parseFloat(position[1]),\n    'longitude' : parseFloat(position[0]),\n    'city' : _findKey(result, 'LocalityName'),\n    'state' : _findKey(result, 'AdministrativeAreaName'),\n    'streetName': _findKey(result, 'ThoroughfareName'),\n    'streetNumber' : _findKey(result, 'PremiseNumber'),\n    'countryCode' : _findKey(result, 'CountryNameCode'),\n    'country' : _findKey(result, 'CountryName')\n  };\n}\n\nfunction _processOptionsToParams(params, options){\n\n  //language (language_region, ex: `ru_RU`, `uk_UA`)\n  if (options.language) {\n    params.lang = options.language;\n  }\n\n  //results count (default 10)\n  if (options.results) {\n    params.results = options.results;\n  }\n\n  //skip count (default 0)\n  if (options.skip) {\n    params.skip = options.skip;\n  }\n\n  //Type of toponym (only for reverse geocoding)\n  //could be `house`, `street`, `metro`, `district`, `locality`\n  if (options.kind) {\n    params.kind = options.kind;\n  }\n\n  //BBox (ex: `[[lat: 1.0, lng:2.0],[lat: 1.1, lng:2.2]]`)\n  if (options.bbox) {\n    if (options.bbox.length === 2){\n      params.kind = options.bbox[0].lng + ',' + options.bbox[0].lat;\n      params.kind = params.kind + '~';\n      params.kind = params.kind + options.bbox[1].lng + ',' + options.bbox[1].lat;\n    }\n  }\n\n  //Limit search in bbox (1) or not limit (0)\n  if (options.rspn) {\n    params.rspn = options.rspn;\n  }\n}\n\n// Yandex geocoding API endpoint\nYandexGeocoder.prototype._endpoint = 'https://geocode-maps.yandex.ru/1.x/';\n\n/**\n* Geocode\n* @param <string>   value    Value to geocode (Address)\n* @param <function> callback Callback method\n*/\nYandexGeocoder.prototype._geocode = function(value, callback) {\n  var params = {\n    geocode : value,\n    format: 'json'\n  };\n\n  _processOptionsToParams(params, this.options);\n\n  this.httpAdapter.get(this._endpoint, params, function(err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n\n      result.response.GeoObjectCollection.featureMember.forEach(function(geopoint) {\n        results.push(_formatResult(geopoint));\n      });\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nYandexGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var value = lng + ',' + lat;\n\n  this._geocode(value, callback);\n};\n\n\nmodule.exports = YandexGeocoder;\n","map":{"mappings":[{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}}],"sources":{"node_modules/node-geocoder/lib/geocoder/yandexgeocoder.js":"'use strict';\n\nvar util = require('util');\nvar AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (language, clientId, apiKey)\n */\nvar YandexGeocoder = function YandexGeocoder(httpAdapter, options) {\n  YandexGeocoder.super_.call(this, httpAdapter, options);\n};\n\nutil.inherits(YandexGeocoder, AbstractGeocoder);\n\nfunction _findKey(result, wantedKey) {\n  var val = null;\n  Object.keys(result).every(function(key) {\n\n  if (key === wantedKey) {\n    val = result[key];\n    return false;\n  }\n\n  if (typeof result[key] === 'object') {\n    val = _findKey(result[key], wantedKey);\n\n    return val === null ? true : false;\n  }\n\n  return true;\n  });\n\n  return val;\n}\n\nfunction _formatResult(result) {\n  var position = result.GeoObject.Point.pos.split(' ');\n  result = result.GeoObject.metaDataProperty.GeocoderMetaData.AddressDetails;\n\n  return {\n    'latitude' : parseFloat(position[1]),\n    'longitude' : parseFloat(position[0]),\n    'city' : _findKey(result, 'LocalityName'),\n    'state' : _findKey(result, 'AdministrativeAreaName'),\n    'streetName': _findKey(result, 'ThoroughfareName'),\n    'streetNumber' : _findKey(result, 'PremiseNumber'),\n    'countryCode' : _findKey(result, 'CountryNameCode'),\n    'country' : _findKey(result, 'CountryName')\n  };\n}\n\nfunction _processOptionsToParams(params, options){\n\n  //language (language_region, ex: `ru_RU`, `uk_UA`)\n  if (options.language) {\n    params.lang = options.language;\n  }\n\n  //results count (default 10)\n  if (options.results) {\n    params.results = options.results;\n  }\n\n  //skip count (default 0)\n  if (options.skip) {\n    params.skip = options.skip;\n  }\n\n  //Type of toponym (only for reverse geocoding)\n  //could be `house`, `street`, `metro`, `district`, `locality`\n  if (options.kind) {\n    params.kind = options.kind;\n  }\n\n  //BBox (ex: `[[lat: 1.0, lng:2.0],[lat: 1.1, lng:2.2]]`)\n  if (options.bbox) {\n    if (options.bbox.length === 2){\n      params.kind = options.bbox[0].lng + ',' + options.bbox[0].lat;\n      params.kind = params.kind + '~';\n      params.kind = params.kind + options.bbox[1].lng + ',' + options.bbox[1].lat;\n    }\n  }\n\n  //Limit search in bbox (1) or not limit (0)\n  if (options.rspn) {\n    params.rspn = options.rspn;\n  }\n}\n\n// Yandex geocoding API endpoint\nYandexGeocoder.prototype._endpoint = 'https://geocode-maps.yandex.ru/1.x/';\n\n/**\n* Geocode\n* @param <string>   value    Value to geocode (Address)\n* @param <function> callback Callback method\n*/\nYandexGeocoder.prototype._geocode = function(value, callback) {\n  var params = {\n    geocode : value,\n    format: 'json'\n  };\n\n  _processOptionsToParams(params, this.options);\n\n  this.httpAdapter.get(this._endpoint, params, function(err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n\n      result.response.GeoObjectCollection.featureMember.forEach(function(geopoint) {\n        results.push(_formatResult(geopoint));\n      });\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nYandexGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var value = lng + ',' + lat;\n\n  this._geocode(value, callback);\n};\n\n\nmodule.exports = YandexGeocoder;\n"},"lineCount":140}},"hash":"77729dfc9ffd34794cc64cb966f17751","cacheData":{"env":{}}}