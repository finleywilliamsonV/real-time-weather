{"id":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","dependencies":[{"name":"/Users/admin/Desktop/porfolio-sites/weather/package.json","includedInParent":true,"mtime":1539921251752},{"name":"/Users/admin/Desktop/porfolio-sites/weather/.babelrc","includedInParent":true,"mtime":1539895192787},{"name":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/package.json","includedInParent":true,"mtime":1539921250401},{"name":"util","loc":{"line":1,"column":31},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","resolved":"/Users/admin/.config/yarn/global/node_modules/util/util.js"},{"name":"./abstractgeocoder","loc":{"line":2,"column":31},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","resolved":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js"}],"generated":{"js":"var util             = require('util'),\n    AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar FreegeoipGeocoder = function FreegeoipGeocoder(httpAdapter) {\n    this.supportIPv4   = true;\n    this.supportIPv6   = true;\n    this.supportAddress = false;\n    FreegeoipGeocoder.super_.call(this, httpAdapter);\n};\n\nutil.inherits(FreegeoipGeocoder, AbstractGeocoder);\n\n// WS endpoint\nFreegeoipGeocoder.prototype._endpoint = 'http://freegeoip.net/json/';\n\n/**\n* Geocode\n* @param <string>   value    Value to geocode (IP only)\n* @param <function> callback Callback method\n*/\nFreegeoipGeocoder.prototype._geocode = function(value, callback) {\n    this.httpAdapter.get(this._endpoint + value , { }, function(err, result) {\n        if (err) {\n            return callback(err);\n        } else {\n\n            var results = [];\n\n            results.push({\n                'ip' : result.ip,\n                'countryCode' : result.country_code,\n                'country' : result.country_name,\n                'regionCode' : result.region_code,\n                'regionName' : result.region_name,\n                'city' : result.city,\n                'zipcode' : result.zip_code,\n                'timeZone' : result.time_zone,\n                'latitude' : result.latitude,\n                'longitude' : result.longitude,\n                'metroCode' : result.metro_code\n\n            });\n\n            results.raw = result;\n            callback(false, results);\n        }\n\n    });\n\n};\n\nmodule.exports = FreegeoipGeocoder;\n","map":{"mappings":[{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}}],"sources":{"node_modules/node-geocoder/lib/geocoder/freegeoipgeocoder.js":"var util             = require('util'),\n    AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar FreegeoipGeocoder = function FreegeoipGeocoder(httpAdapter) {\n    this.supportIPv4   = true;\n    this.supportIPv6   = true;\n    this.supportAddress = false;\n    FreegeoipGeocoder.super_.call(this, httpAdapter);\n};\n\nutil.inherits(FreegeoipGeocoder, AbstractGeocoder);\n\n// WS endpoint\nFreegeoipGeocoder.prototype._endpoint = 'http://freegeoip.net/json/';\n\n/**\n* Geocode\n* @param <string>   value    Value to geocode (IP only)\n* @param <function> callback Callback method\n*/\nFreegeoipGeocoder.prototype._geocode = function(value, callback) {\n    this.httpAdapter.get(this._endpoint + value , { }, function(err, result) {\n        if (err) {\n            return callback(err);\n        } else {\n\n            var results = [];\n\n            results.push({\n                'ip' : result.ip,\n                'countryCode' : result.country_code,\n                'country' : result.country_name,\n                'regionCode' : result.region_code,\n                'regionName' : result.region_name,\n                'city' : result.city,\n                'zipcode' : result.zip_code,\n                'timeZone' : result.time_zone,\n                'latitude' : result.latitude,\n                'longitude' : result.longitude,\n                'metroCode' : result.metro_code\n\n            });\n\n            results.raw = result;\n            callback(false, results);\n        }\n\n    });\n\n};\n\nmodule.exports = FreegeoipGeocoder;\n"},"lineCount":56}},"hash":"c4080a48bd50e982e4f81928050f2de1","cacheData":{"env":{}}}