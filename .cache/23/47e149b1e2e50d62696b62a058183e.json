{"id":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","dependencies":[{"name":"/Users/admin/Desktop/porfolio-sites/weather/package.json","includedInParent":true,"mtime":1539921251752},{"name":"/Users/admin/Desktop/porfolio-sites/weather/.babelrc","includedInParent":true,"mtime":1539895192787},{"name":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/package.json","includedInParent":true,"mtime":1539921250401},{"name":"crypto","loc":{"line":3,"column":21},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","resolved":"/Users/admin/.config/yarn/global/node_modules/crypto-browserify/index.js"},{"name":"url","loc":{"line":4,"column":18},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","resolved":"/Users/admin/.config/yarn/global/node_modules/url/url.js"},{"name":"util","loc":{"line":5,"column":19},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","resolved":"/Users/admin/.config/yarn/global/node_modules/util/util.js"},{"name":"./abstractgeocoder","loc":{"line":6,"column":31},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","resolved":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js"},{"name":"buffer","parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","resolved":"/Users/admin/.config/yarn/global/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nvar crypto = require('crypto');\nvar url = require('url');\nvar util = require('util');\nvar AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (language, clientId, apiKey, region, excludePartialMatches)\n */\nvar GoogleGeocoder = function GoogleGeocoder(httpAdapter, options) {\n  this.options = ['language', 'apiKey', 'clientId', 'region', 'excludePartialMatches', 'channel'];\n\n  GoogleGeocoder.super_.call(this, httpAdapter, options);\n\n  if (this.options.clientId && !this.options.apiKey) {\n    throw new Error('You must specify a apiKey (privateKey)');\n  }\n\n  if (this.options.apiKey && !httpAdapter.supportsHttps()) {\n    throw new Error('You must use https http adapter');\n  }\n};\n\nutil.inherits(GoogleGeocoder, AbstractGeocoder);\n\n// Google geocoding API endpoint\nGoogleGeocoder.prototype._endpoint = 'https://maps.googleapis.com/maps/api/geocode/json';\n\n/**\n * Geocode\n * @param <string>   value    Value ton geocode (Address)\n * @param <function> callback Callback method\n */\nGoogleGeocoder.prototype._geocode = function (value, callback) {\n\n  var _this = this;\n  var params = this._prepareQueryString();\n\n  if (value.address) {\n    var components = '';\n\n    if (value.country) {\n      components = 'country:' + value.country;\n    }\n\n    if (value.zipcode) {\n      if (components) {\n        components += '|';\n      }\n      components += 'postal_code:' + value.zipcode;\n    }\n\n    params.components = this._encodeSpecialChars(components);\n    params.address = this._encodeSpecialChars(value.address);\n  } else if (value.googlePlaceId) {\n    params.place_id = value.googlePlaceId;\n  } else {\n    params.address = this._encodeSpecialChars(value);\n  }\n\n  if (value.language) {\n    params.language = value.language;\n  }\n\n  if (value.region) {\n    params.region = value.region;\n  }\n\n  var excludePartialMatches = params.excludePartialMatches;\n  delete params.excludePartialMatches;\n\n  this._signedRequest(this._endpoint, params);\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      // status can be \"OK\", \"ZERO_RESULTS\", \"OVER_QUERY_LIMIT\", \"REQUEST_DENIED\", \"INVALID_REQUEST\", or \"UNKNOWN_ERROR\"\n      // error_message may or may not be present\n      if (result.status === 'ZERO_RESULTS') {\n        results.raw = result;\n        return callback(false, results);\n      }\n\n      if (result.status !== 'OK') {\n        return callback(new Error('Status is ' + result.status + '.' + (result.error_message ? ' ' + result.error_message : '')), {raw: result});\n      }\n\n      for (var i = 0; i < result.results.length; i++) {\n\n        var currentResult = result.results[i];\n\n        if (excludePartialMatches && excludePartialMatches === true && typeof currentResult.partial_match !== 'undefined' && currentResult.partial_match === true) {\n          continue;\n        }\n\n        results.push(_this._formatResult(currentResult));\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n\n  });\n\n};\n\nGoogleGeocoder.prototype._prepareQueryString = function () {\n  var params = {\n    'sensor': false\n  };\n\n  if (this.options.language) {\n    params.language = this.options.language;\n  }\n\n  if (this.options.region) {\n    params.region = this.options.region;\n  }\n\n  if (this.options.clientId) {\n    params.client = this.options.clientId;\n  } else if (this.options.apiKey) {\n    params.key = this.options.apiKey;\n  }\n\n  if (this.options.channel) {\n    params.channel = this.options.channel;\n  }\n\n  if (this.options.excludePartialMatches && this.options.excludePartialMatches === true) {\n    params.excludePartialMatches = true;\n  }\n\n  return params;\n\n};\n\nGoogleGeocoder.prototype._signedRequest = function (endpoint, params) {\n\n  if (this.options.clientId) {\n    var request = url.parse(endpoint);\n    var fullRequestPath = request.path + url.format({query: params});\n\n    var decodedKey = new Buffer(this.options.apiKey.replace('-', '+').replace('_', '/'), 'base64');\n    var hmac = crypto.createHmac('sha1', decodedKey);\n    hmac.update(fullRequestPath);\n    var signature = hmac.digest('base64');\n\n    signature = signature.replace(/\\+/g, '-').replace(/\\//g, '_');\n\n    params.signature = signature;\n  }\n\n  return params;\n};\n\nGoogleGeocoder.prototype._formatResult = function (result) {\n\n  var googleConfidenceLookup = {\n    ROOFTOP: 1,\n    RANGE_INTERPOLATED: 0.9,\n    GEOMETRIC_CENTER: 0.7,\n    APPROXIMATE: 0.5\n  };\n\n  var extractedObj = {\n    formattedAddress: result.formatted_address || null,\n    latitude: result.geometry.location.lat,\n    longitude: result.geometry.location.lng,\n    extra: {\n      googlePlaceId: result.place_id || null,\n      confidence: googleConfidenceLookup[result.geometry.location_type] || 0,\n      premise: null,\n      subpremise: null,\n      neighborhood: null,\n      establishment: null\n    },\n    administrativeLevels: {\n    }\n  };\n\n  for (var i = 0; i < result.address_components.length; i++) {\n    for (var x = 0; x < result.address_components[i].types.length; x++) {\n      var addressType = result.address_components[i].types[x];\n      switch (addressType) {\n        //Country\n        case 'country':\n          extractedObj.country = result.address_components[i].long_name;\n          extractedObj.countryCode = result.address_components[i].short_name;\n          break;\n        //Administrative Level 1\n        case 'administrative_area_level_1':\n          extractedObj.administrativeLevels.level1long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level1short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 2\n        case 'administrative_area_level_2':\n          extractedObj.administrativeLevels.level2long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level2short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 3\n        case 'administrative_area_level_3':\n          extractedObj.administrativeLevels.level3long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level3short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 4\n        case 'administrative_area_level_4':\n          extractedObj.administrativeLevels.level4long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level4short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 5\n        case 'administrative_area_level_5':\n          extractedObj.administrativeLevels.level5long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level5short = result.address_components[i].short_name;\n          break;\n        // City\n        case 'locality':\n        case 'postal_town':\n          extractedObj.city = result.address_components[i].long_name;\n          break;\n        // Address\n        case 'postal_code':\n          extractedObj.zipcode = result.address_components[i].long_name;\n          break;\n        case 'route':\n          extractedObj.streetName = result.address_components[i].long_name;\n          break;\n        case 'street_number':\n          extractedObj.streetNumber = result.address_components[i].long_name;\n          break;\n        case 'premise':\n          extractedObj.extra.premise = result.address_components[i].long_name;\n          break;\n        case 'subpremise':\n          extractedObj.extra.subpremise = result.address_components[i].long_name;\n          break;\n        case 'establishment':\n          extractedObj.extra.establishment = result.address_components[i].long_name;\n          break;\n        case 'sublocality_level_1':\n        case 'political':\n        case 'sublocality':\n        case 'neighborhood':\n          if(!extractedObj.extra.neighborhood) {\n            extractedObj.extra.neighborhood = result.address_components[i].long_name;\n          }\n          break;\n      }\n    }\n  }\n  return extractedObj;\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nGoogleGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n  var params = this._prepareQueryString();\n\n  params.latlng = lat + ',' + lng;\n\n  if (query.language) {\n    params.language = query.language;\n  }\n\n  if (query.result_type) {\n    params.result_type = query.result_type;\n  }\n\n  if (query.location_type) {\n    params.location_type = query.location_type;\n  }\n\n  this._signedRequest(this._endpoint, params);\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      // status can be \"OK\", \"ZERO_RESULTS\", \"OVER_QUERY_LIMIT\", \"REQUEST_DENIED\", \"INVALID_REQUEST\", or \"UNKNOWN_ERROR\"\n      // error_message may or may not be present\n      if (result.status !== 'OK') {\n        return callback(new Error('Status is ' + result.status + '.' + (result.error_message ? ' ' + result.error_message : '')), {raw: result});\n      }\n\n      var results = [];\n\n      if (result.results.length > 0) {\n        results.push(_this._formatResult(result.results[0]));\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nGoogleGeocoder.prototype._encodeSpecialChars = function(value) {\n  if (typeof value === 'string') {\n    return value.replace(/\\u001a/g, ' ');\n  }\n\n  return value;\n};\n\nmodule.exports = GoogleGeocoder;\n","map":{"mappings":[{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}}],"sources":{"node_modules/node-geocoder/lib/geocoder/googlegeocoder.js":"'use strict';\n\nvar crypto = require('crypto');\nvar url = require('url');\nvar util = require('util');\nvar AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (language, clientId, apiKey, region, excludePartialMatches)\n */\nvar GoogleGeocoder = function GoogleGeocoder(httpAdapter, options) {\n  this.options = ['language', 'apiKey', 'clientId', 'region', 'excludePartialMatches', 'channel'];\n\n  GoogleGeocoder.super_.call(this, httpAdapter, options);\n\n  if (this.options.clientId && !this.options.apiKey) {\n    throw new Error('You must specify a apiKey (privateKey)');\n  }\n\n  if (this.options.apiKey && !httpAdapter.supportsHttps()) {\n    throw new Error('You must use https http adapter');\n  }\n};\n\nutil.inherits(GoogleGeocoder, AbstractGeocoder);\n\n// Google geocoding API endpoint\nGoogleGeocoder.prototype._endpoint = 'https://maps.googleapis.com/maps/api/geocode/json';\n\n/**\n * Geocode\n * @param <string>   value    Value ton geocode (Address)\n * @param <function> callback Callback method\n */\nGoogleGeocoder.prototype._geocode = function (value, callback) {\n\n  var _this = this;\n  var params = this._prepareQueryString();\n\n  if (value.address) {\n    var components = '';\n\n    if (value.country) {\n      components = 'country:' + value.country;\n    }\n\n    if (value.zipcode) {\n      if (components) {\n        components += '|';\n      }\n      components += 'postal_code:' + value.zipcode;\n    }\n\n    params.components = this._encodeSpecialChars(components);\n    params.address = this._encodeSpecialChars(value.address);\n  } else if (value.googlePlaceId) {\n    params.place_id = value.googlePlaceId;\n  } else {\n    params.address = this._encodeSpecialChars(value);\n  }\n\n  if (value.language) {\n    params.language = value.language;\n  }\n\n  if (value.region) {\n    params.region = value.region;\n  }\n\n  var excludePartialMatches = params.excludePartialMatches;\n  delete params.excludePartialMatches;\n\n  this._signedRequest(this._endpoint, params);\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      // status can be \"OK\", \"ZERO_RESULTS\", \"OVER_QUERY_LIMIT\", \"REQUEST_DENIED\", \"INVALID_REQUEST\", or \"UNKNOWN_ERROR\"\n      // error_message may or may not be present\n      if (result.status === 'ZERO_RESULTS') {\n        results.raw = result;\n        return callback(false, results);\n      }\n\n      if (result.status !== 'OK') {\n        return callback(new Error('Status is ' + result.status + '.' + (result.error_message ? ' ' + result.error_message : '')), {raw: result});\n      }\n\n      for (var i = 0; i < result.results.length; i++) {\n\n        var currentResult = result.results[i];\n\n        if (excludePartialMatches && excludePartialMatches === true && typeof currentResult.partial_match !== 'undefined' && currentResult.partial_match === true) {\n          continue;\n        }\n\n        results.push(_this._formatResult(currentResult));\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n\n  });\n\n};\n\nGoogleGeocoder.prototype._prepareQueryString = function () {\n  var params = {\n    'sensor': false\n  };\n\n  if (this.options.language) {\n    params.language = this.options.language;\n  }\n\n  if (this.options.region) {\n    params.region = this.options.region;\n  }\n\n  if (this.options.clientId) {\n    params.client = this.options.clientId;\n  } else if (this.options.apiKey) {\n    params.key = this.options.apiKey;\n  }\n\n  if (this.options.channel) {\n    params.channel = this.options.channel;\n  }\n\n  if (this.options.excludePartialMatches && this.options.excludePartialMatches === true) {\n    params.excludePartialMatches = true;\n  }\n\n  return params;\n\n};\n\nGoogleGeocoder.prototype._signedRequest = function (endpoint, params) {\n\n  if (this.options.clientId) {\n    var request = url.parse(endpoint);\n    var fullRequestPath = request.path + url.format({query: params});\n\n    var decodedKey = new Buffer(this.options.apiKey.replace('-', '+').replace('_', '/'), 'base64');\n    var hmac = crypto.createHmac('sha1', decodedKey);\n    hmac.update(fullRequestPath);\n    var signature = hmac.digest('base64');\n\n    signature = signature.replace(/\\+/g, '-').replace(/\\//g, '_');\n\n    params.signature = signature;\n  }\n\n  return params;\n};\n\nGoogleGeocoder.prototype._formatResult = function (result) {\n\n  var googleConfidenceLookup = {\n    ROOFTOP: 1,\n    RANGE_INTERPOLATED: 0.9,\n    GEOMETRIC_CENTER: 0.7,\n    APPROXIMATE: 0.5\n  };\n\n  var extractedObj = {\n    formattedAddress: result.formatted_address || null,\n    latitude: result.geometry.location.lat,\n    longitude: result.geometry.location.lng,\n    extra: {\n      googlePlaceId: result.place_id || null,\n      confidence: googleConfidenceLookup[result.geometry.location_type] || 0,\n      premise: null,\n      subpremise: null,\n      neighborhood: null,\n      establishment: null\n    },\n    administrativeLevels: {\n    }\n  };\n\n  for (var i = 0; i < result.address_components.length; i++) {\n    for (var x = 0; x < result.address_components[i].types.length; x++) {\n      var addressType = result.address_components[i].types[x];\n      switch (addressType) {\n        //Country\n        case 'country':\n          extractedObj.country = result.address_components[i].long_name;\n          extractedObj.countryCode = result.address_components[i].short_name;\n          break;\n        //Administrative Level 1\n        case 'administrative_area_level_1':\n          extractedObj.administrativeLevels.level1long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level1short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 2\n        case 'administrative_area_level_2':\n          extractedObj.administrativeLevels.level2long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level2short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 3\n        case 'administrative_area_level_3':\n          extractedObj.administrativeLevels.level3long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level3short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 4\n        case 'administrative_area_level_4':\n          extractedObj.administrativeLevels.level4long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level4short = result.address_components[i].short_name;\n          break;\n        //Administrative Level 5\n        case 'administrative_area_level_5':\n          extractedObj.administrativeLevels.level5long = result.address_components[i].long_name;\n          extractedObj.administrativeLevels.level5short = result.address_components[i].short_name;\n          break;\n        // City\n        case 'locality':\n        case 'postal_town':\n          extractedObj.city = result.address_components[i].long_name;\n          break;\n        // Address\n        case 'postal_code':\n          extractedObj.zipcode = result.address_components[i].long_name;\n          break;\n        case 'route':\n          extractedObj.streetName = result.address_components[i].long_name;\n          break;\n        case 'street_number':\n          extractedObj.streetNumber = result.address_components[i].long_name;\n          break;\n        case 'premise':\n          extractedObj.extra.premise = result.address_components[i].long_name;\n          break;\n        case 'subpremise':\n          extractedObj.extra.subpremise = result.address_components[i].long_name;\n          break;\n        case 'establishment':\n          extractedObj.extra.establishment = result.address_components[i].long_name;\n          break;\n        case 'sublocality_level_1':\n        case 'political':\n        case 'sublocality':\n        case 'neighborhood':\n          if(!extractedObj.extra.neighborhood) {\n            extractedObj.extra.neighborhood = result.address_components[i].long_name;\n          }\n          break;\n      }\n    }\n  }\n  return extractedObj;\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nGoogleGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n  var params = this._prepareQueryString();\n\n  params.latlng = lat + ',' + lng;\n\n  if (query.language) {\n    params.language = query.language;\n  }\n\n  if (query.result_type) {\n    params.result_type = query.result_type;\n  }\n\n  if (query.location_type) {\n    params.location_type = query.location_type;\n  }\n\n  this._signedRequest(this._endpoint, params);\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      // status can be \"OK\", \"ZERO_RESULTS\", \"OVER_QUERY_LIMIT\", \"REQUEST_DENIED\", \"INVALID_REQUEST\", or \"UNKNOWN_ERROR\"\n      // error_message may or may not be present\n      if (result.status !== 'OK') {\n        return callback(new Error('Status is ' + result.status + '.' + (result.error_message ? ' ' + result.error_message : '')), {raw: result});\n      }\n\n      var results = [];\n\n      if (result.results.length > 0) {\n        results.push(_this._formatResult(result.results[0]));\n      }\n\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nGoogleGeocoder.prototype._encodeSpecialChars = function(value) {\n  if (typeof value === 'string') {\n    return value.replace(/\\u001a/g, ' ');\n  }\n\n  return value;\n};\n\nmodule.exports = GoogleGeocoder;\n"},"lineCount":317}},"hash":"cc422113d1e9b38622fe0df9b6147af9","cacheData":{"env":{}}}