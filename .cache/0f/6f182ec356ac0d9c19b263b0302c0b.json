{"id":"node_modules/node-geocoder/lib/formatter/stringformatter.js","dependencies":[{"name":"/Users/admin/Desktop/porfolio-sites/weather/package.json","includedInParent":true,"mtime":1539921251752},{"name":"/Users/admin/Desktop/porfolio-sites/weather/.babelrc","includedInParent":true,"mtime":1539895192787},{"name":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/package.json","includedInParent":true,"mtime":1539921250401}],"generated":{"js":"var StringFormatter = function(pattern) {\n\n    if (!pattern || pattern === 'undefined') {\n        throw new Error('StringFormatter need a pattern');\n    }\n\n    this.pattern = pattern;\n};\n\nStringFormatter.prototype.format = function(data) {\n\n    var strings = [];\n\n    for (var i = 0; i < data.length; i++) {\n        var str = this.pattern\n            .replace(/%n/, data[i].streetNumber)\n            .replace(/%S/, data[i].streetName)\n            .replace(/%z/, data[i].zipcode)\n            .replace(/%P/, data[i].country)\n            .replace(/%p/, data[i].countryCode)\n            .replace(/%c/, data[i].city)\n            .replace(/%T/, data[i].state)\n            .replace(/%t/, data[i].stateCode);\n\n        strings.push(str);\n    }\n\n    return strings;\n};\n\nmodule.exports = StringFormatter;\n","map":{"mappings":[{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-geocoder/lib/formatter/stringformatter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"node_modules/node-geocoder/lib/formatter/stringformatter.js":"var StringFormatter = function(pattern) {\n\n    if (!pattern || pattern === 'undefined') {\n        throw new Error('StringFormatter need a pattern');\n    }\n\n    this.pattern = pattern;\n};\n\nStringFormatter.prototype.format = function(data) {\n\n    var strings = [];\n\n    for (var i = 0; i < data.length; i++) {\n        var str = this.pattern\n            .replace(/%n/, data[i].streetNumber)\n            .replace(/%S/, data[i].streetName)\n            .replace(/%z/, data[i].zipcode)\n            .replace(/%P/, data[i].country)\n            .replace(/%p/, data[i].countryCode)\n            .replace(/%c/, data[i].city)\n            .replace(/%T/, data[i].state)\n            .replace(/%t/, data[i].stateCode);\n\n        strings.push(str);\n    }\n\n    return strings;\n};\n\nmodule.exports = StringFormatter;\n"},"lineCount":32}},"hash":"7626969290f572d3ffbd635156f48af3","cacheData":{"env":{}}}