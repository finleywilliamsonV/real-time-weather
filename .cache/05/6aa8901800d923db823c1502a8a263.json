{"id":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","dependencies":[{"name":"/Users/admin/Desktop/porfolio-sites/weather/package.json","includedInParent":true,"mtime":1539921251752},{"name":"/Users/admin/Desktop/porfolio-sites/weather/.babelrc","includedInParent":true,"mtime":1539895192787},{"name":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/package.json","includedInParent":true,"mtime":1539921250401},{"name":"util","loc":{"line":1,"column":19},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/heregeocoder.js","resolved":"/Users/admin/.config/yarn/global/node_modules/util/util.js"},{"name":"./abstractgeocoder","loc":{"line":2,"column":29},"parent":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/heregeocoder.js","resolved":"/Users/admin/Desktop/porfolio-sites/weather/node_modules/node-geocoder/lib/geocoder/abstractgeocoder.js"}],"generated":{"js":"var util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (appId, appCode, language, politicalView, country, state)\n */\nvar HereGeocoder = function HereGeocoder(httpAdapter, options) {\n  this.options = ['appId', 'appCode', 'language', 'politicalView', 'country', 'state'];\n\n  HereGeocoder.super_.call(this, httpAdapter, options);\n\n  if (!this.options.appId || !this.options.appCode) {\n    throw new Error('You must specify appId and appCode to use Here Geocoder');\n  }\n};\n\nutil.inherits(HereGeocoder, AbstractGeocoder);\n\n// Here geocoding API endpoint\nHereGeocoder.prototype._geocodeEndpoint = 'https://geocoder.cit.api.here.com/6.2/geocode.json';\n\n// Here reverse geocoding API endpoint\nHereGeocoder.prototype._reverseEndpoint = 'https://reverse.geocoder.api.here.com/6.2/reversegeocode.json';\n\n/**\n * Geocode\n * @param <string>   value    Value ton geocode (Address)\n * @param <function> callback Callback method\n */\nHereGeocoder.prototype._geocode = function (value, callback) {\n\n  var _this = this;\n  var params = this._prepareQueryString();\n\n  if (value.address) {\n    if (value.language) {\n        params.language = value.language;\n    }\n    if (value.politicalView) {\n        params.politicalview = value.politicalView;\n    }\n    if (value.country) {\n        params.country = value.country;\n        if (value.state) {\n            params.state = value.state;\n        } else {\n            delete params.state;\n        }\n    }\n    if (value.zipcode) {\n        params.postalcode = value.zipcode;\n    }\n    params.searchtext = value.address;\n  } else {\n    params.searchtext = value;\n  }\n\n  this.httpAdapter.get(this._geocodeEndpoint, params, function (err, result) {\n    var results = [];\n    results.raw = result;\n\n    if (err) {\n      return callback(err, results);\n    } else {\n      var view = result.Response.View[0];\n      if (!view) {\n        return callback(false, results);\n      }\n\n      // Format each geocoding result\n      results = view.Result.map(_this._formatResult);\n      results.raw = result;\n\n      callback(false, results);\n    }\n  });\n};\n\nHereGeocoder.prototype._prepareQueryString = function () {\n  var params = {\n    'additionaldata': 'Country2,true',\n    'gen': 8\n  };\n\n  if (this.options.appId) {\n    params.app_id = this.options.appId;\n  }\n  if (this.options.appCode) {\n    params.app_code = this.options.appCode;\n  }\n  if (this.options.language) {\n    params.language = this.options.language;\n  }\n  if (this.options.politicalView) {\n    params.politicalview = this.options.politicalView;\n  }\n  if (this.options.country) {\n    params.country = this.options.country;\n  }\n  if (this.options.state) {\n    params.state = this.options.state;\n  }\n\n  return params;\n};\n\nHereGeocoder.prototype._formatResult = function (result) {\n  var location = result.Location || {};\n  var address = location.Address || {};\n  var i;\n\n  var extractedObj = {\n    formattedAddress: address.Label || null,\n    latitude: location.DisplayPosition.Latitude,\n    longitude: location.DisplayPosition.Longitude,\n    country: null,\n    countryCode: address.Country || null,\n    state: address.State || null,\n    county: address.County || null,\n    city: address.City || null,\n    zipcode: address.PostalCode || null,\n    district: address.District || null,\n    streetName: address.Street || null,\n    streetNumber: address.HouseNumber || null,\n    building: address.Building || null,\n    extra: {\n      herePlaceId: location.LocationId || null,\n      confidence: result.Relevance || 0\n    },\n    administrativeLevels: {}\n  };\n\n  for (i = 0; i < address.AdditionalData.length; i++) {\n    var additionalData = address.AdditionalData[i];\n    switch (additionalData.key) {\n      //Country 2-digit code\n      case 'Country2':\n        extractedObj.countryCode = additionalData.value;\n        break;\n      //Country name\n      case 'CountryName':\n        extractedObj.country = additionalData.value;\n        break;\n      //State name\n      case 'StateName':\n        extractedObj.administrativeLevels.level1long = additionalData.value;\n        extractedObj.state = additionalData.value;\n        break;\n      //County name\n      case 'CountyName':\n        extractedObj.administrativeLevels.level2long = additionalData.value;\n        extractedObj.county = additionalData.value;\n    }\n  }\n\n  return extractedObj;\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nHereGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n  var params = this._prepareQueryString();\n  params.pos = lat + ',' + lng;\n  params.mode = 'trackPosition';\n\n  this.httpAdapter.get(this._reverseEndpoint, params, function (err, result) {\n    var results = [];\n    results.raw = result;\n\n    if (err) {\n      return callback(err, results);\n    } else {\n      var view = result.Response.View[0];\n      if (!view) {\n        return callback(false, results);\n      }\n\n      // Format each geocoding result\n      results = view.Result.map(_this._formatResult);\n      results.raw = result;\n\n      callback(false, results);\n    }\n  });\n};\n\nmodule.exports = HereGeocoder;\n","map":{"mappings":[{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/node-geocoder/lib/geocoder/heregeocoder.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}}],"sources":{"node_modules/node-geocoder/lib/geocoder/heregeocoder.js":"var util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (appId, appCode, language, politicalView, country, state)\n */\nvar HereGeocoder = function HereGeocoder(httpAdapter, options) {\n  this.options = ['appId', 'appCode', 'language', 'politicalView', 'country', 'state'];\n\n  HereGeocoder.super_.call(this, httpAdapter, options);\n\n  if (!this.options.appId || !this.options.appCode) {\n    throw new Error('You must specify appId and appCode to use Here Geocoder');\n  }\n};\n\nutil.inherits(HereGeocoder, AbstractGeocoder);\n\n// Here geocoding API endpoint\nHereGeocoder.prototype._geocodeEndpoint = 'https://geocoder.cit.api.here.com/6.2/geocode.json';\n\n// Here reverse geocoding API endpoint\nHereGeocoder.prototype._reverseEndpoint = 'https://reverse.geocoder.api.here.com/6.2/reversegeocode.json';\n\n/**\n * Geocode\n * @param <string>   value    Value ton geocode (Address)\n * @param <function> callback Callback method\n */\nHereGeocoder.prototype._geocode = function (value, callback) {\n\n  var _this = this;\n  var params = this._prepareQueryString();\n\n  if (value.address) {\n    if (value.language) {\n        params.language = value.language;\n    }\n    if (value.politicalView) {\n        params.politicalview = value.politicalView;\n    }\n    if (value.country) {\n        params.country = value.country;\n        if (value.state) {\n            params.state = value.state;\n        } else {\n            delete params.state;\n        }\n    }\n    if (value.zipcode) {\n        params.postalcode = value.zipcode;\n    }\n    params.searchtext = value.address;\n  } else {\n    params.searchtext = value;\n  }\n\n  this.httpAdapter.get(this._geocodeEndpoint, params, function (err, result) {\n    var results = [];\n    results.raw = result;\n\n    if (err) {\n      return callback(err, results);\n    } else {\n      var view = result.Response.View[0];\n      if (!view) {\n        return callback(false, results);\n      }\n\n      // Format each geocoding result\n      results = view.Result.map(_this._formatResult);\n      results.raw = result;\n\n      callback(false, results);\n    }\n  });\n};\n\nHereGeocoder.prototype._prepareQueryString = function () {\n  var params = {\n    'additionaldata': 'Country2,true',\n    'gen': 8\n  };\n\n  if (this.options.appId) {\n    params.app_id = this.options.appId;\n  }\n  if (this.options.appCode) {\n    params.app_code = this.options.appCode;\n  }\n  if (this.options.language) {\n    params.language = this.options.language;\n  }\n  if (this.options.politicalView) {\n    params.politicalview = this.options.politicalView;\n  }\n  if (this.options.country) {\n    params.country = this.options.country;\n  }\n  if (this.options.state) {\n    params.state = this.options.state;\n  }\n\n  return params;\n};\n\nHereGeocoder.prototype._formatResult = function (result) {\n  var location = result.Location || {};\n  var address = location.Address || {};\n  var i;\n\n  var extractedObj = {\n    formattedAddress: address.Label || null,\n    latitude: location.DisplayPosition.Latitude,\n    longitude: location.DisplayPosition.Longitude,\n    country: null,\n    countryCode: address.Country || null,\n    state: address.State || null,\n    county: address.County || null,\n    city: address.City || null,\n    zipcode: address.PostalCode || null,\n    district: address.District || null,\n    streetName: address.Street || null,\n    streetNumber: address.HouseNumber || null,\n    building: address.Building || null,\n    extra: {\n      herePlaceId: location.LocationId || null,\n      confidence: result.Relevance || 0\n    },\n    administrativeLevels: {}\n  };\n\n  for (i = 0; i < address.AdditionalData.length; i++) {\n    var additionalData = address.AdditionalData[i];\n    switch (additionalData.key) {\n      //Country 2-digit code\n      case 'Country2':\n        extractedObj.countryCode = additionalData.value;\n        break;\n      //Country name\n      case 'CountryName':\n        extractedObj.country = additionalData.value;\n        break;\n      //State name\n      case 'StateName':\n        extractedObj.administrativeLevels.level1long = additionalData.value;\n        extractedObj.state = additionalData.value;\n        break;\n      //County name\n      case 'CountyName':\n        extractedObj.administrativeLevels.level2long = additionalData.value;\n        extractedObj.county = additionalData.value;\n    }\n  }\n\n  return extractedObj;\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nHereGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n  var params = this._prepareQueryString();\n  params.pos = lat + ',' + lng;\n  params.mode = 'trackPosition';\n\n  this.httpAdapter.get(this._reverseEndpoint, params, function (err, result) {\n    var results = [];\n    results.raw = result;\n\n    if (err) {\n      return callback(err, results);\n    } else {\n      var view = result.Response.View[0];\n      if (!view) {\n        return callback(false, results);\n      }\n\n      // Format each geocoding result\n      results = view.Result.map(_this._formatResult);\n      results.raw = result;\n\n      callback(false, results);\n    }\n  });\n};\n\nmodule.exports = HereGeocoder;\n"},"lineCount":197}},"hash":"4b4ef0952b3db2b1940d5e773c3b7895","cacheData":{"env":{}}}